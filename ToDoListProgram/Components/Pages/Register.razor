@page "/register"
@rendermode InteractiveServer
@inject NavigationManager Nav
@inject ToDoListProgram.Service.UserService UserService

<PageTitle>Register</PageTitle>

<h3>Register</h3>

<div class="register-container">
    <div class="form-group mb-3">
        <label>Username: </label>
        <input @bind="username" class="form-control" />
    </div>

    <div class="form-group mb-3">
        <label>Password: </label>
        <input type="password" @bind="password" class="form-control" />
    </div>

    <button type="button" class="btn btn-success" @onclick="HandleRegister">Register</button>

    @if (!string.IsNullOrEmpty(message))
    {
        <p class="mt-2 text-info">@message</p>
    }
</div>


@code {
    private string username = "";
    private string password = "";
    private string message = "";

    private async Task HandleRegister()
    {
        if (string.IsNullOrWhiteSpace(username) || string.IsNullOrWhiteSpace(password))
        {
            message = "Please enter both username and password.";
            return;
        }
        
        if (UserService.Register(username, password))
        {
            message = "Registration successful! Redirecting...";
            await Task.Delay(1000);
            Nav.NavigateTo("/login", forceLoad: true);
        }
        else
        {
            message = "Username already exists.";
        }
    }
}

<style>
    .register-container {
        max-width: 300px;
        margin: 100px auto;
    }
</style>
